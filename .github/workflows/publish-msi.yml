name: TableCloth Build Pipeline

on:
  push:
    branches: [ dev, feature/adopt-wixsharp ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on
    runs-on: windows-2019

    env:
      Solution_Name: src\TableCloth.sln
      Hostess_Project_Path: src\Hostess\Hostess.csproj
      TableCloth_Project_Directory: src\TableCloth
      TableCloth_Project_Path: src\TableCloth\TableCloth.csproj
      Setup_Project_Name: TableCloth.SetupBuilder
      Setup_Project_Directory: src\TableCloth.SetupBuilder
      Setup_Project_Path: src\TableCloth.SetupBuilder\TableCloth.SetupBuilder.csproj
      Platform: x64

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Setup NuGet CLI
    - name: Setup NuGet CLI
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: '5.x'
    
    # Restore .NET Framework nuget packages
    - name: Restore the application (.NET Framework Part)
      run: nuget restore $env:Solution_Name

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application (.NET Core Part)
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration /m
      env:
        Configuration: ${{ matrix.configuration }}

    # Build Hostess project separately
    - name: Build Hostess project
      run: msbuild $env:Hostess_Project_Path /p:Configuration=$env:Configuration /p:Platform=$env:Platform /m
      env:
        Configuration: ${{ matrix.configuration }}

    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test -c:$env:Configuration
    #  env:
    #    Configuration: ${{ matrix.configuration }}

    # Publish TableCloth project
    - name: Build TableCloth project
      run: dotnet publish $env:TableCloth_Project_Path -r win-${{ env.Platform }} -p:PublishSingleFile=true -c:$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Setup_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Set path for candle and light
      run: echo "$env:WIX_PATH\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      env:
        WIX_PATH: ${{ env.wix }}

    # Build setup builder project separately
    - name: Build setup builder project
      run: msbuild $env:Setup_Project_Path /p:Configuration=$env:Configuration /p:Platform=$env:Platform /m
      env:
        Configuration: ${{ matrix.configuration }}
    
    # Run Setup builder
    - name: Run setup builder
      run: |
        $SetupBuilderFullPath = [System.IO.Path]::GetFullPath('${{ env.Setup_Project_Directory }}\bin\${{ env.Platform }}\${{ matrix.configuration }}\${{ env.Setup_Project_Name }}.exe')
        $InputDirPath = [System.IO.Path]::GetFullPath('${{ env.TableCloth_Project_Directory }}\bin\${{ env.Platform }}\${{ matrix.configuration }}\net5.0-windows\win-${{ env.Platform }}\publish')
        $PfxFileFullPath = [System.IO.Path]::GetFullPath('${{ env.Setup_Project_Directory }}\GitHubActionsWorkflow.pfx')
        $LicenseRtfFullPath = [System.IO.Path]::GetFullPath('${{ env.Setup_Project_Directory }}\License.rtf')
        $IconFilePath = [System.IO.Path]::GetFullPath('${{ env.TableCloth_Project_Directory }}\App.ico')
        echo $SetupBuilderFullPath
        echo $InputDirPath
        echo $PfxFileFullPath
        echo $LicenseRtfFullPath
        echo $IconFilePath
        dir $SetupBuilderFullPath -ErrorAction Continue
        dir $InputDirPath -ErrorAction Continue
        dir $PfxFileFullPath -ErrorAction Continue
        dir $LicenseRtfFullPath -ErrorAction Continue
        dir $IconFilePath -ErrorAction Continue
        . $SetupBuilderFullPath $InputDirPath $PfxFileFullPath '${{ secrets.Pfx_Key }}' $LicenseRtfFullPath $IconFilePath

    # Remove the pfx
    - name: Remove the pfx
      run: |
        $certificatePath = Join-Path -Path $env:Setup_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
        Remove-Item -path $certificatePath

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: MSIX Package (${{ matrix.configuration }})
        path: TableCloth.msi
